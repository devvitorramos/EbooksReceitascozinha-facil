@echo off
echo ðŸš€ Setup Completo - Export Multiplataforma Lovable
echo ==================================================================
echo.

REM Verificar Node.js
echo [ETAPA] Verificando Node.js...
where node >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] Node.js nÃ£o encontrado. Instale Node.js primeiro.
    pause
    exit /b 1
)
echo [SUCCESS] Node.js encontrado

REM Verificar/Instalar Rust
echo [ETAPA] Verificando/Instalando Rust...
where rustc >nul 2>&1
if %errorlevel% neq 0 (
    echo [WARNING] Rust nÃ£o encontrado. Instalando...
    curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    call %USERPROFILE%\.cargo\env.bat
    echo [SUCCESS] Rust instalado
) else (
    echo [SUCCESS] Rust encontrado
)

REM Instalar dependÃªncias npm
echo [ETAPA] Instalando dependÃªncias npm...
npm install
echo [SUCCESS] DependÃªncias npm instaladas!

REM Criar estrutura de diretÃ³rios
echo [ETAPA] Criando estrutura de diretÃ³rios...
if not exist "release\desktop\windows" mkdir release\desktop\windows
if not exist "release\desktop\macos" mkdir release\desktop\macos
if not exist "release\desktop\linux" mkdir release\desktop\linux
if not exist "release\web" mkdir release\web
if not exist "src-tauri\icons" mkdir src-tauri\icons
if not exist "src-tauri\gen" mkdir src-tauri\gen
echo [SUCCESS] Estrutura de diretÃ³rios criada!

REM Verificar scripts no package.json
echo [ETAPA] Verificando configuraÃ§Ã£o do package.json...
findstr "build:desktop:win" package.json >nul
if %errorlevel% equ 0 (
    echo [SUCCESS] Scripts jÃ¡ configurados no package.json
) else (
    echo [WARNING] Scripts NÃƒO encontrados no package.json
    echo [INFO] Copie os scripts de SCRIPTS-PACKAGE.json para seu package.json
)

echo.
echo ðŸŽ‰ Setup completo finalizado!
echo ==================================================================
echo.
echo ðŸ“‹ PrÃ³ximos passos:
echo.
echo 1. Configure os scripts:
echo    Copie os scripts de SCRIPTS-PACKAGE.json para seu package.json
echo.
echo 2. Desenvolvimento:
echo    npm run tauri:dev
echo.
echo 3. Builds individuais:
echo    npm run build:web                 ^# Web estÃ¡tico
echo    npm run build:desktop:win         ^# Windows
echo    npm run build:desktop:mac         ^# macOS
echo    npm run build:desktop:linux       ^# Linux
echo.
echo 4. Build completo:
echo    npm run build:all                 ^# Todas as versÃµes
echo.
echo ðŸ“– DocumentaÃ§Ã£o:
echo    â€¢ GUIA-COMPLETO.md - DocumentaÃ§Ã£o completa
echo    â€¢ SCRIPTS-PACKAGE.json - Scripts para copiar
echo    â€¢ /release/ - Builds finais serÃ£o gerados aqui
echo.
echo ðŸ”§ Comandos Ãºteis:
echo    â€¢ rustc --version          ^# Verificar Rust
echo    â€¢ tauri --version          ^# Verificar Tauri CLI
echo    â€¢ npm run tauri info       ^# Info do sistema
echo.
echo âœ… Pronto para desenvolver e exportar!

pause